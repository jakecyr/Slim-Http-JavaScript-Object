"use strict";function Http(){var i=this;this.callback=function(t){},this.catch=function(t){return this.errorCallback=t,this},this.then=function(t){return i.callback=t,i},this.get=function(t,r,e){if(!t)throw new Error("URL is required to make a GET request");return r&&(this.callback=r),e&&(this.errorCallback=e),this.request("GET",t,r)},this.post=function(t,r,e,s){if(!t)throw new Error("URL is required to make a POST request");if(e&&(this.callback=e),s&&(this.errorCallback=s),r){var a=!0;for(var i in r)t+=(a?"?":"&")+i+"="+r[i],a=!1}return this.request("POST",t,e)},this.request=function(t,r,e){if("GET"!==t&&"POST"!==t)throw new Error("Only GET and POST requests are allowed");if(!r)throw new Error("URL is required to make a "+t+" request");var s=i,a=new XMLHttpRequest;return a.open(t,r),a.send(),a.onreadystatechange=function(){if(4==this.readyState)if(200==this.status){if(s.callback){var t=a.responseText,r="text";try{t=JSON.parse(t),r="json"}catch(t){r="plain"}s.callback({data:t,code:this.status,type:r})}}else s.errorCallback?s.errorCallback({error:a.responseText,code:this.status}):s.callback({error:a.responseText,code:this.status})},i}}
